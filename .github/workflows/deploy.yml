name: Terraform AWS Workflow

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on PR to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0  # Specify your Terraform version (latest stable)

      # Step 3: Cache Terraform providers and modules
      - name: Cache Terraform providers
        uses: actions/cache@v2
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      # Step 4: Set up AWS credentials (using GitHub Secrets)
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 6: Run Terraform plan
      - name: Terraform Plan
        run: terraform plan

      # Step 7: Apply Terraform configuration (requires manual approval in PRs)
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_environment: production  # You can set environment variables like this
          
