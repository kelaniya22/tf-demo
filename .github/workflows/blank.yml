name: Terraform AWS Deployment

# Trigger the pipeline on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest  # Use an Ubuntu runner to run the Terraform commands

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6  # You can specify your desired version

      # Cache Terraform provider plugins
      - name: Cache Terraform providers
        uses: actions/cache@v2
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      # Initialize Terraform (this will download the provider plugins)
      - name: Terraform Init
        run: terraform init

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Run Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Apply Terraform plan (this will actually apply the infrastructure changes)
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Store AWS credentials in GitHub secrets
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Store AWS credentials in GitHub secrets
          AWS_DEFAULT_REGION: "us-west-2"  # Set the region for AWS

      
